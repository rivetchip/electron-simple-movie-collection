static

meson -Ddefault_library=static _build .
ninja -C _build

copie le .a,
-L. définir le chemin des library dans le dossier de compilation
-I include header

gcc ../test2.c `pkg-config --cflags --libs glib-2.0 json-glib-1.0` -L. -l:libjson-glib-1.0.a -g -o main && ./main

==========

env = environment()
env.set('CXX', ' '.join(meson.get_compiler('cpp').cmd_array()))
env.set('CXXFLAGS', ' '.join(get_option('cpp_args')))
env.set('LDFLAGS', ' '.join(get_option('cpp_link_args')))

# Question 2
if meson.is_cross_build()
  # e.g. 'arm-linux-gnueabihf-'
  cross_base = meson.get_cross_property('cross_base')
else 
  cross_base = ''
endif

env.set('LD', cross_base + 'ld')
env.set('AR', cross_base + 'ar')
env.set('RANLIB', cross_base + 'ranlib')
env.set('STRIP', cross_base + 'strip')
env.set('OBJCOPY', cross_base + 'objcopy')

==========

# libostd_static = declare_dependency(
#     include_directories: libostd_includes,
#     link_with: libostd_lib.get_static_lib()
# )

# dep = dependency('foo', fallback : [subproject_name, variable_name])

libgvc = subproject('json-glib',
  default_options: [
    'package-name=' + meson.project_name(),
    'package-version=' + meson.project_version(),
    # 'pkgdatadir=' + pkgdatadir,
    # 'pkglibdir=' + pkglibdir,
    'static=true',
    'with-introspection=true',
    'buildtype=static_library'
  ]
)

my_inc = include_directories(...)
my_lib = static_library(...)
my_dep = declare_dependency(link_with : my_lib, include_directories : my_inc)

========

workaround : https://gitlab.gnome.org/GNOME/libgnome-volume-control/blob/eeaffe5c3da4ff720402ff6aab13e76c6c273403/meson.build
https://gitlab.gnome.org/GNOME/gnome-shell/blob/de0e21612c89d55e8833cb0d321ffc1c5e35fe3f/meson.build#L230

meson_options txt :
option('static',   type: 'boolean',   value: false,   description: 'Build as a static library.' )

projeect => default_options: ['static=true']

enable_static = get_option('static')

if(enable_static) ... static_library(...)

Append custom library path #3926
https://github.com/mesonbuild/meson/issues/3926
deps += [compiler.find_library(libname, dirs : [devkitpro_dir + '/libnds/lib'])]

========

Compile vala programs with gee:

valac --pkg gee-0.8 --pkg gtk+-3.0 test.vala -C

=====================

loop pointers

char **values = movie->countries;
for (char **ptr = values; *ptr; ptr++) {
    printf("<< %s \n", *ptr);
}
for (size_t i = 0; values[i] != NULL; i++) {
    printf("<< %s \n", values[i]);
}


VALGRIND leak checks for segfault : valgrind --leak-check=full ./program

valgrind --tool=memcheck --leak-check=full --leak-resolution=high --num-callers=20 --log-file=vgdump --suppressions=gtk.supp --suppressions=glib.supp ./moviecollection




*************************************************************************
*************************************************************************

Ressources utiles :
https://github.com/GNOME/gnome-todo/blob/master/src/gtd-task-list.c#L233
gnome-abrt -> ui -> panels
gnome-contacts -> panels, recherches
gnome-recipes -> tags, recherche,s etc
file-roller - gears + properties dialog
celluloid-player/celluloid  -> menu



gtk_list_box_unselect_all => quand on réouvre un fihcier

memory leak =>  à chaque fois qu'on ouvre un fichier, ça ne free pas la list des Movie

g_keyfile_free !> où le mettre ?

gobject : est-ce que lors du new_object() il initialise les props à NULL/0 par défaut ? On dirait

cc-control -> loader on selected

CtoF(Celsius, &Fahrenheit); => & when modifying argument pointer

accels sur les boutons / labels, etc pluoto que les events/callbacks ??

-> important : retrouver la source original de la recherche
je rcois c'est directemenet dans GTK sur un widget



*************************************************************************
*************************************************************************

Ouvrir une liste, selectionner une caté, ouvrir la même liste :

** Message: 00:35:37.854: signal_toolbar_open
** Message: 00:35:40.668: signal_movieslist_changed pos:0 del:10 add:0
(moviecollection:22070): GLib-GObject-CRITICAL **: 00:35:40.668: g_object_get_data: assertion 'G_IS_OBJECT (object)' failed










https://developer.gnome.org/gobject/stable/chapter-gobject.html
https://developer.gnome.org/gobject/stable/howto-gobject-construction.html


gedit

1) open_files

GEDIT_WINDOW_STATE_LOADING

gedit_statusbar_set_window_state

save_window_state

g_set_prgname


G_DEFINE_TYPE (GeditMenuExtension, gedit_menu_extension, G_TYPE_OBJECT)


    g_object_set_data(G_OBJECT(widget), "movieId", GINT_TO_POINTER(movieId));


gtk_widget_set_events(w, |e|e|e|)

  g_signal_connect (task, "notify", G_CALLBACK (task_changed_cb), self);

g_object_notify_by_pspec
bind property to class ??



=============

#include <string.h>
#include <ctype.h>

// macros
// static char *stristr(const char *haystack, const char *needle) {
//     do {
//         const char* h = haystack;
//         const char* n = needle;
//         while(*n && tolower(*h) == tolower(*n)) {
//             h++;
//             n++;
//         }
//         if(*n == 0) {
//             return (char *) haystack;
//         }
//     } while(*haystack++);
//     return NULL;
// }

OU : 

// int isupper(int c) {
//     return (unsigned)c-'A' < 26;
// }
// int tolower(int c) {
//     if (isupper(c)) return c | 32;
//     return c;
// }
int strncasecmp(const char *_l, const char *_r, size_t n) {
    const unsigned char *l=(void *)_l, *r=(void *)_r;
    if (!n--) return 0;
    for (; *l && *r && n && (*l == *r || tolower(*l) == tolower(*r)); l++, r++, n--);
    return tolower(*l) - tolower(*r);
}
char *strcasestr(const char *h, const char *n) {
    size_t l = strlen(n);
    for (; *h; h++) if (!strncasecmp(h, n, l)) return (char *)h;
    return 0;
}





    GtkWidget *window = gtk_widget_get_toplevel(GTK_WIDGET(button));

    if(GTK_IS_WINDOW(window)) {
        
    }


    